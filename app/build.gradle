plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.kapt)
    alias(libs.plugins.hilt)
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.compose.compiler)
}

android {
    namespace 'com.example.otchallenge'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.otchallenge"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // This configurations should be extracted from env variables or a configuration file
        // so the CI and developers can quickly share new configurations
        buildConfigField "String", "API_BASE_URL", "\"https://api.nytimes.com/svc/books/v3/\""
        buildConfigField "String", "API_KEY", "\"KoRB4K5LRHygfjCL2AH6iQ7NeUqDAGAB\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        viewBinding true
    }

    android.buildFeatures.buildConfig true
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout

    // compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.material3
    implementation libs.androidx.ui.tooling.preview
    debugImplementation libs.androidx.ui.tooling
    implementation libs.androidx.activity.compose

    // dagger
    implementation libs.dagger
    kapt libs.dagger.compiler

    // hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.lifecycle.viewmodel.compose

    //retrofit
    implementation libs.retrofit
    implementation libs.retrofit.rx.adapter
    implementation libs.retrofit.kotlin.converter
    implementation libs.okhttp

    //glide
    implementation libs.glide
    implementation libs.compose

    //reactive x
    implementation libs.rx.android
    implementation libs.rx.java
    implementation libs.rx.kotlin

    // coroutines
    implementation libs.kotlinx.coroutines.android

    //serialization
    implementation libs.kotlinx.serialization.json

    testImplementation libs.junit
    testImplementation libs.assertj.core
    testImplementation libs.turbine
    testImplementation libs.mockito.kotlin
    testImplementation libs.kotlinx.coroutines.test

    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}

kapt {
    correctErrorTypes true
}
